### Compiler! Put the correct numbers into these words, please
# DEST.GET          LL
# DEST.SET          MM
# DEST.BADCALLER    NN
# DEST.BADDATA      PP
# DEST.BADVALUE     QQ
# DEST.REVERT       RR

# Reject Ether
60 00        # PUSH1        | 0x0
34           # CALLVALUE    | 0x0, val 
11           # GT           | (val > 0x0)
60 PP        # PUSH1        | (val > 0x0), DEST.BADVALUE
57           # JUMPI        |

36           # CALLDATASIZE | calldatasize
60 20        # PUSH1        | calldatasize, 0x20
14           # EQ           | (calldatasize == 0x20)
60 LL        # PUSH1        | (calldatsize == 0x20), DEST.GET
57           # JUMPI        |

36           # CALLDATASIZE | calldatasize
60 40        # PUSH1 0x40   | calldatasize, 0x40
14           # EQ           | (calldatasize == 0x40)
60 MM        # PUSH1 0xMM   | (calldatasize == 0x40), DEST.SET
57           # JUMPI

60 PP        # PUSH1 0xPP   | DEST.BADDATA
56           # JUMP

5B         ### DEST.GET
60 00        # PUSH1 0x0    | 0x0
35           # CALLDATALOAD | arg0
54           # SLOAD        | val0
60 00        # PUSH1 0x0    | PUSH1 val0, offset(0)
52           # MSTORE       |
60 20        # PUSH1 32     | 0x20
60 00        # PUSH1 0x0    | 0x20, 0x00
F3           # RETURN

5B         ### DEST.SET
73           # PUSH20 <addr> | owner
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
 FF FF
33           # CALLER       | owner, caller
14           # EQ           | (owner == caller)
19           # NOT          | (owner != caller)
60 NN        # PUSH1 0xNN   | (owner != caller), DEST.BADCALLER
57           # JUMPI        |
60 01        # PUSH1 0x01   | 0x1
35           # CALLDATALOAD | arg1
60 00        # PUSH1 0x00   | arg1, 0x0
35           # CALLDATALOAD | arg1, arg0
81           # DUP2         | arg1, arg0, arg1
81           # DUP2         | arg1, arg0, arg1, arg0
60 00        # PUSH1 0x0    | arg1, arg0, arg1, arg0, 0x0
80           # DUP1         | arg1, arg0, arg1, arg0, 0x0, 0x0
A2           # LOG2         | arg, arg0
55           # SSTORE       | 
00           # STOP         | 

5B         ### DEST.BADVALUE
60 01        # PUSH1 0x0    | 0x1
60 RR        # PUSH1 0xRR   | 0x1, DEST.REVERT
56           # JUMP         | 0x1

5B         ### DEST.BADDATA
60 02       # PUSH1 0x2    | 0x2
60 RR       # PUSH1 0xRR   | 0x2, DEST.REVERT
56          # JUMP         | 0x2

5B         ### DEST.BADCALLER
60 04        # PUSH1 0x4    | 0x4
60 RR        # PUSH1 0xRR   | 0x4, DEST.REVERT
56           # JUMP         | 0x4

5B         ### DEST.REVERT  (requires: errcode)
60 00        # PUSH1 0x0    | errcode, 0x0
52           # MSTORE
60 01        # PUSH1 0x1    | 0x1
60 00        # PUSH1 0x0    | 0x1, 0x0
FD           # REVERT
