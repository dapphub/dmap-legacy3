60 14            // PUSH1 20             S: length(address)
60 0c            // PUSH1 12             S: length, offset
60 01            // PUSH1 01             S: length, offset, destoffset
37               // CALLDATACOPY         S:     // mem[1:21] == data[12:32]
60 00            // PUSH1 0              S: 0
51               // MLOAD                S: address
7F               // PUSH32 template      S: address, template
73 00 00 00
00 00 00 00
00 00 00 00
00 00 00 00
00 00 00 00
00 33 14 60
27 57 60 00
35 54 60 00
16               // AND                  S: code0
7F               // PUSH32 code2         S: code0, code1
52 60 20 60
00 F3 5B 60
20 35 60 00
35 55 00 00
00 00 00 00
00 00 00 00
00 00 00 00
00 00 00 00
60 20            // PUSH1 32             S: code0, code1, 32
52               // MSTORE               S: code0,         // mem[1] = code1
60 00            // PUSH1 0              S: code0, 0
52               // MSTORE               S:                // mem[0] = code0
60 2F            // PUSH1 47 (codelen)   S: length
60 00            // PUSH1 0              S: length, 0
60 00            // PUSH1 0              S: length, 0, 0
F0               // CREATE               S: address
80               // DUP1                 S: address, address
33               // CALLER               S: address, address, caller
55               // SSTORE               S: address     // storage[caller] = address
60 00            // PUSH1 0              S: address, 0
52               // MSTORE               S:    // mem[0] = address
60 20            // PUSH1 32             S: 32
60 00            // PUSH1 0              S: 32, 0
F3               // RETURN               S:    // return mem[0]
